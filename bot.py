import requests
import telebot
from telebot import types
import ntplib
import pytz 
from datetime import datetime, timedelta
import os
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = "<YOUR_TELEGRAM_BOT_TOKEN>"
bot = telebot.TeleBot(TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
ip = '0.0.0.0'  # –ù–∞—á–∞–ª—å–Ω—ã–π IP
is_admin = False
login = 0
cooldowns = {}  # –û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
status_data = {'turn_status': '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', 'status': 0}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ Minecraft
MINECRAFT_SERVERS = {
    'Berkania': '<YOUR_MINECRAFT_SERVER_IP>'
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
def init_files():
    if not os.path.exists('ip.txt'):
        with open('ip.txt', 'w') as f:
            f.write(ip)
    if not os.path.exists('login.txt'):
        with open('login.txt', 'w') as f:
            f.write("admin")  # –ü–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

init_files()

# –ó–∞–≥—Ä—É–∑–∫–∞ IP
with open('ip.txt', 'r') as f:
    ip = f.read().strip()

# –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
def admin_panel(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('/input_ip')
    btn2 = types.KeyboardButton('/logout')
    btn3 = types.KeyboardButton('/server_status')
    markup.add(btn1, btn2, btn3)
    bot.send_message(
        chat_id,
        "üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n"
        "/input_ip - –ò–∑–º–µ–Ω–∏—Ç—å IP —Å–µ—Ä–≤–µ—Ä–∞\n"
        "/server_status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å\n"
        "/logout - –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def send_welcome(message):
    menu = """
üöÄ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/login - –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
/status - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
/release - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏
    """
    bot.reply_to(message, menu)

@bot.message_handler(commands=['login'])
def handle_login(message):
    msg = bot.send_message(message.chat.id, "üîë –í–≤–µ–¥–∏—Ç–µ –∞–¥–º–∏–Ω-–ø–∞—Ä–æ–ª—å:", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, check_admin_password)

def check_admin_password(message):
    global is_admin
    try:
        with open('login.txt', 'r') as f:
            correct_password = f.read().strip()
        
        if message.text.strip() == correct_password:
            is_admin = True
            admin_panel(message.chat.id)
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(commands=['logout'])
def handle_logout(message):
    global is_admin
    is_admin = False
    bot.send_message(message.chat.id, "‚úÖ –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã", reply_markup=types.ReplyKeyboardRemove())

@bot.message_handler(commands=['input_ip'])
def handle_input_ip(message):
    if is_admin:
        msg = bot.send_message(message.chat.id, "üåê –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π IP-–∞–¥—Ä–µ—Å:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, update_ip_address)
    else:
        bot.reply_to(message, "üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")

def update_ip_address(message):
    global ip
    new_ip = message.text.strip()
    try:
        with open('ip.txt', 'w') as f:
            f.write(new_ip)
        ip = new_ip
        bot.reply_to(message, f"‚úÖ IP –æ–±–Ω–æ–≤–ª–µ–Ω: {new_ip}")
        admin_panel(message.chat.id)
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(commands=['status', 'server_status'])
def check_status(message):
    try:
        response = requests.get(f"https://api.mcsrvstat.us/2/{ip}" , verify=False)
        data = response.json()
        status = "üü¢ –û–Ω–ª–∞–π–Ω" if data['online'] else "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω"
        players = f"üë• –ò–≥—Ä–æ–∫–æ–≤: {data['players']['online']}/{data['players']['max']}" if data['online'] else ""
        bot.reply_to(message, f"{status}\n{players}")
        if is_admin:
            admin_panel(message.chat.id)
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(commands=['info'])
def show_info(message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    try:
        response = requests.get(f"https://api.mcsrvstat.us/2/{ip}" , verify=False)
        data = response.json()
        status = "üü¢ –û–Ω–ª–∞–π–Ω" if data['online'] else "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω"
        players = f"üë• –ò–≥—Ä–æ–∫–æ–≤: {data['players']['online']}/{data['players']['max']}" if data['online'] else ""
        bot.reply_to(message, f"{status}\n{players}")
        if is_admin:
            admin_panel(message.chat.id)
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    bot.reply_to(message, f"–¢–µ–∫—É—â–∏–π ip –∞–¥—Ä–µ—Å: {ip}\n")

@bot.message_handler(commands=['release'])
def show_version(message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏"""
    bot.reply_to(message, "üîñ –í–µ—Ä—Å–∏—è 4.0\nmade in GANREN‚Ñ¢, –≤—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã\n–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ Berkania –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub.")

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def sync_time():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å NTP-—Å–µ—Ä–≤–µ—Ä–æ–º"""
    try:
        client = ntplib.NTPClient()
        response = client.request('pool.ntp.org', version=3)
        return datetime.fromtimestamp(response.tx_time)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        return datetime.now()

def save_data(filename, data):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª"""
    with open(f'{filename}.txt', 'w') as f:
        f.write(str(data))

def load_data(filename):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(f'{filename}.txt', 'r') as f:
            return f.read().strip()
    except FileNotFoundError:
        return None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
def init_data():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    status_data['ip'] = load_data('ip') or '0.0.0.0'
    status_data['status'] = int(load_data('status') or 0)
    status_data['turn_status'] = ['–≤—ã–∫–ª—é—á–µ–Ω', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', '–≤–∫–ª—é—á–µ–Ω'][status_data['status'] + 1]

sync_time()
init_data()
print("ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()
